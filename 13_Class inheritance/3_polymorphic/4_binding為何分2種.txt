類別中 : "一般成員函數" 要執行的區塊函式碼是在 編譯期間 就已經決定好了。 稱為靜態繫結(static binding)

類別中 : "虛擬成員函數" 不是在編譯期決定要使用哪個區塊的函式碼。因為編譯期不知道使用者要選擇產生何種物件。
         在程式執行中才能知道是哪個物件呼叫正確虛擬函式的程式碼。        稱為動態繫結(dynamin binding)。

//////////////////////////////////////////////////////////////////////////////////////////////////

如果"動態繫結"允許重新定義類別函數，為何還需要"靜態繫結"呢?


有2種原因:
1.當然是因為效率。如果程式用能夠用動態做決定，則程式必須以某種方式， """紀錄基礎類別的reference或指標指向何種物件"""
                                                                ---------會造成額外的處理負擔----------------
  靜態繫結是比較有效率的，但動態繫結 比較有彈性設計空間
2.分2種binding，是為了 (概念模式)，有些基礎類別的成員函式，在衍生類別不想要重新定義，這時候就是靜態繫結。

//////////////////////////////////////////////////////////////////////////////////////////////////
有興趣的話，可以去探討 虛擬函數的運作機制。